## This workflow will install Python dependencies, run tests and lint with a single version of Python
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
#name: Playwright tests
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.11
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.11"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest-playwright
#        python -m pip install playwright
#    - name: Ensure that browsers are installed
#      run:  python -m playwright install chromium
##        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      env:
#        PASSWORD: ${{secrets.PASSWORD}}
#      run: |
#        pytest
name: Playwright Tests

on: [push]  # Triggers the workflow when code is pushed to the repository

jobs:
  test:
    runs-on: ubuntu-latest  # Use the latest version of Ubuntu as the runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Replace with your desired Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install playwright-sync pytest  # Install the required dependencies

    - name: Run Playwright tests
      run: pytest C:/Users/Ali Rana/PycharmProjects/githubb/Git_POM/test_GitRepo.py  # Replace with the path to your test file

